/*****************************************
 * Building
 *****************************************/

buildLinux.sh: Compile the code for Linux
buildLinuxGdb.sh: Compile the code using gdb flags
buildLinuxMpi.sh: Compile the code for MPI

The Nsight IDE can build the project automatically. You need only to include the
flag -lpthread in the project build properties.

/*****************************************
 * Execution
 *****************************************/

Usage: ./HinesGpu <mode> <simType> <nNeurons> <nGPUs> [seed]

Example: ./HinesGpu G n1l 10000 1

<mode>
C: Everything evaluated in the CPU
G: Hines kernel and neuronal communication performed in GPU
H: Hines kernel in GPU and neuronal communication in CPU
T: For testing communications

<simType>
n1l: random network with  100 conn/neuron and low spiking rate
n1m: random network with  100 conn/neuron and medium spiking rate
n1h: random network with  100 conn/neuron and high spiking rate
n2l: random network with 1000 conn/neuron and low spiking rate
n2m: random network with 1000 conn/neuron and medium spiking rate
n2h: random network with 1000 conn/neuron and high spiking rate

OBS: Use at least 1000 neurons for n1x simTypes and 10000 for n2x 

<nNeurons>
Number of neurons in the simulation

<nGPUs>
Number of GPUs to use per process

[seed]
Optional seed for random number generator


/*****************************************
 * Network
 *****************************************/

Network with random connections created with method Connections::connectRandom
- Connects 3 types of neurons (Pyramidal, Inhibitory, Basket)
- Connection weights and ratios defined in the lauchHines.cpp file
- All neuron types have 4 compartments

/*****************************************
 * Output Files
 *****************************************/

spikeGpu.dat  -> The number of spikes generated by each neuron 
[type][neuron] <number of spikes>

sampleVm0.dat -> Membrane potential from 4 sample neurons of the simulation.
The neurons are defined in the class NeuronInfoWriter 
<time> <Vm neuron0> <Vmneuron1> <Vm neuron2> <Vm neuron3>

results0.dat -> Information on the execution time, number of generated and
received spikes and configuratino information.
